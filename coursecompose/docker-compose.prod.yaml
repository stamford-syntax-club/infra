version: "3.8"
networks:
  course-compose:
  stamford:
    external: true
    name: haproxy_stamford
  redis_internal:
    external: true
    name: redis_internal
  kafka_queue:
    external: true
    name: kafka_kafka_queue

services:
  web:
    image: ghcr.io/stamford-syntax-club/course-compose/web:prod-0a5161d819d40e5c0674b37f5d7b077af4dd3e28 
    container_name: compose_web
    restart: always
    networks:
      - stamford
      - course-compose

  api-gateway:
    image: ghcr.io/stamford-syntax-club/course-compose/api-gateway:prod-0f6a050f6294845ea30f263aa20f1a48bc63e073
    container_name: compose_api_gateway
    restart: always
    volumes:
      - ./syntax-config.yaml:/app/syntax-config.yaml
    networks:
      - stamford # receive traffic from HAProxy
      - course-compose # send traffic to corresponding services

  course-api:
    image: ghcr.io/stamford-syntax-club/course-compose/course-api:prod-879ead98f76e50379061b4539f381720c569632a
    container_name: compose_api_course
    restart: always
    volumes:
      - ./.env.production:/app/.env
    networks:
      - redis_internal
      - course-compose

  reviews-api:
    image: ghcr.io/stamford-syntax-club/course-compose/reviews-api:prod-0f6a050f6294845ea30f263aa20f1a48bc63e073
    container_name: compose_api_review
    restart: always
    volumes:
      - ./.env.production:/app/.env.production
    networks:
      - redis_internal
      - stamford # for HAProxy
      - course-compose
      - kafka_queue

  ramune:
    image: ghcr.io/stamford-syntax-club/course-compose/ramune:prod-pre-release
    container_name: compose_ramune
    restart: always
    volumes:
      - ./.env.production:/usr/src/app/.env
    networks:
      - course-compose
      - kafka_queue
